/*
 * led7seg.c
 *
 *  Created on: Oct 26, 2022
 *      Author: nguye
 */
#include "main.h"
#include "led7seg.h"
#include "global.h"
static uint16_t led7seg [10] = {0xffC0 , 0xffF9 , 0xffA4 , 0xffB0 , 0xff99 , 0xff92 , 0xff82 , 0xffF8 , 0xff80 , 0xff90};
static uint8_t led_buffer[4] = {0};

void update_buffer() {
	if (status > 10) {
		led_buffer[0] = status / 10;
		led_buffer[1] = status % 10;
	} else {
		led_buffer[0] = 0;
		led_buffer[1] = status;
	}

	if (light_time > 10) {
		led_buffer[2] = light_time / 10;
		led_buffer[3] = light_time % 10;
	} else {
		led_buffer[2] = 0;
		led_buffer[3] = light_time;
	}

}

void led_init() {
	HAL_GPIO_WritePin(GPIOB, D1_Pin, 1);
}
void update7SEG(int index){
	switch(index) {
		case 0:
			HAL_GPIO_WritePin(GPIOA, EN0_Pin, ON_7SEG); // turn on the first SEG
			HAL_GPIO_WritePin(GPIOA, EN1_Pin, OFF_7SEG); // turn off the second SEG
			HAL_GPIO_WritePin(GPIOA, EN2_Pin, OFF_7SEG); // turn off the third SEG
			HAL_GPIO_WritePin(GPIOA, EN3_Pin, OFF_7SEG); // turn off the fourth SEG
			display7SEG(led_buffer[0]);
			break;
		case 1:
			HAL_GPIO_WritePin(GPIOA, EN0_Pin, OFF_7SEG); // turn off the first SEG
			HAL_GPIO_WritePin(GPIOA, EN1_Pin, ON_7SEG); // turn on the second SEG
			HAL_GPIO_WritePin(GPIOA, EN2_Pin, OFF_7SEG); // turn off the third SEG
			HAL_GPIO_WritePin(GPIOA, EN3_Pin, OFF_7SEG); // turn off the fourth SEG
			display7SEG(led_buffer[1]);
			break;
		case 2:
			HAL_GPIO_WritePin(GPIOA, EN0_Pin, OFF_7SEG); // turn off the first SEG
			HAL_GPIO_WritePin(GPIOA, EN1_Pin, OFF_7SEG); // turn off the second SEG
			HAL_GPIO_WritePin(GPIOA, EN2_Pin, ON_7SEG); // turn on the third SEG
			HAL_GPIO_WritePin(GPIOA, EN3_Pin, OFF_7SEG); // turn off the fourth SEG
			display7SEG(led_buffer[2]);
			break;
		case 3:
			HAL_GPIO_WritePin(GPIOA, EN0_Pin, OFF_7SEG); // turn off the first SEG
			HAL_GPIO_WritePin(GPIOA, EN1_Pin, OFF_7SEG); // turn off the second SEG
			HAL_GPIO_WritePin(GPIOA, EN2_Pin, OFF_7SEG); // turn off the third SEG
			HAL_GPIO_WritePin(GPIOA, EN3_Pin, ON_7SEG); // turn on the fourth SEG
			display7SEG(led_buffer[3]);
			break;
		default:
			break;
	}
}

void display7SEG(int num) {
	GPIOB->ODR = led7seg[num];
}

void displayMode() {
	update_buffer();
	if (index_led >= 4) index_led = 0;
	update7SEG(index_led++);
}
